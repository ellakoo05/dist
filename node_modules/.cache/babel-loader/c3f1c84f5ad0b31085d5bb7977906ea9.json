{"remainingRequest":"/Users/ellayeonjekoo/Desktop/GetTogether/gettogether/node_modules/babel-loader/lib/index.js!/Users/ellayeonjekoo/Desktop/GetTogether/gettogether/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/ellayeonjekoo/Desktop/GetTogether/gettogether/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/ellayeonjekoo/Desktop/GetTogether/gettogether/src/components/EventDetails.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/ellayeonjekoo/Desktop/GetTogether/gettogether/src/components/EventDetails.vue","mtime":1553018436679},{"path":"/Users/ellayeonjekoo/Desktop/GetTogether/gettogether/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ellayeonjekoo/Desktop/GetTogether/gettogether/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/ellayeonjekoo/Desktop/GetTogether/gettogether/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ellayeonjekoo/Desktop/GetTogether/gettogether/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/Users/ellayeonjekoo/Desktop/GetTogether/gettogether/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport AddTask from \"@/components/AddTask.vue\";\nimport TaskList from \"@/components/TaskList.vue\";\nimport io from \"socket.io-client\";\nexport default {\n  name: \"eventDetails\",\n  components: {\n    AddTask: AddTask,\n    TaskList: TaskList\n  },\n  data: function data() {\n    return {\n      event: \"\",\n      eventname: \"\",\n      eventdate: \"\",\n      eventtime: \"\",\n      eventlocation: \"\",\n      display: false,\n      eventCode: \"\",\n      tasks: \"\",\n      newTasks: \"\",\n      isAdmin: false,\n      isUser: false,\n      taskID: this.store.taskID,\n      socket: io(\"https://gettogetherserver.herokuapp.com/chat\"),\n      msg: \"\",\n      allMsgs: [],\n      myRoom: \"\"\n    };\n  },\n  methods: {\n    sendMessage: function sendMessage() {\n      this.username = sessionStorage.getItem(\"username\");\n      var obj = {\n        username: this.username,\n        msg: this.msg,\n        roomName: this.myRoom\n      };\n      this.socket.emit(\"send_msg\", obj);\n      this.store.username = this.username;\n      this.msg = \"\";\n    },\n    refreshPage: function refreshPage() {\n      this.$router.go();\n    },\n    goToDashboard: function goToDashboard() {\n      this.$router.push(\"dashboard\");\n    },\n    goEdit: function goEdit() {\n      this.$router.push(\"editpage\");\n    },\n    deleteEvent: function () {\n      var _deleteEvent = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee() {\n        var _this = this;\n\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                this.$swal({\n                  title: \"Are you sure?\",\n                  text: \"If you click yes, this event will be deleted forever.\",\n                  type: \"warning\",\n                  showCancelButton: true,\n                  confirmButtonText: \"Yes, Delete this event\",\n                  cancelButtonText: \"No, keep it\",\n                  confirmButtonColor: \"lightcoral\",\n                  cancelButtonColor: \"lightblue\",\n                  showCloseButton: true,\n                  showLoaderOnConfirm: true\n                }).then(function (result) {\n                  if (result.value) {\n                    _this.$swal(\"Deleted\", \"You successfully deleted this event\", \"success\");\n\n                    _this.$router.push(\"dashboard\");\n\n                    var deleteEvent = new FormData();\n                    deleteEvent.append(\"eventCode\", sessionStorage.getItem(\"eventCode\"));\n                    var resp = fetch(\"https://gettogetherbcit.herokuapp.com/mysql/deleteEvents.php\", {\n                      method: \"POST\",\n                      body: deleteEvent\n                    });\n                  } else {\n                    _this.$swal(\"Cancelled\", \"Your event still exists\", \"info\");\n                  }\n                });\n\n              case 1:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function deleteEvent() {\n        return _deleteEvent.apply(this, arguments);\n      }\n\n      return deleteEvent;\n    }()\n  },\n  beforeCreate: function () {\n    var _beforeCreate = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee2() {\n      var eventForm, resp, json, temp, temp2, displayTasks, obj;\n      return regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              eventForm = new FormData();\n              eventForm.append(\"eventCode\", sessionStorage.getItem(\"eventCode\"));\n              _context2.next = 4;\n              return fetch(\"https://gettogetherbcit.herokuapp.com/mysql/selectEvent.php\", {\n                method: \"POST\",\n                body: eventForm\n              });\n\n            case 4:\n              resp = _context2.sent;\n              _context2.next = 7;\n              return resp.json();\n\n            case 7:\n              json = _context2.sent;\n              this.event = json;\n\n              if (json) {\n                this.store.eventID = json[0].id;\n                this.store.eventname = json[0].eventname;\n                this.store.eventlocation = json[0].eventlocation;\n                this.store.eventdate = json[0].eventdate;\n                this.store.eventenddate = json[0].eventenddate;\n                this.store.eventtime = json[0].eventtime;\n                this.store.eventend = json[0].eventend;\n                this.store.eventnote = json[0].eventnote;\n                temp = sessionStorage.getItem(\"userID\");\n                temp2 = json[0].admin;\n\n                if (sessionStorage.getItem(\"userID\") === json[0].admin) {\n                  this.isAdmin = true;\n                } else {\n                  this.isAdmin = false;\n                  this.isUser = true;\n                }\n              }\n\n              displayTasks = new FormData();\n              displayTasks.append(\"eventCode\", sessionStorage.getItem(\"eventCode\"));\n              displayTasks.append(\"tasks\", this.tasks);\n              _context2.next = 15;\n              return fetch(\"https://gettogetherbcit.herokuapp.com/mysql/getJoinedTasks.php\", {\n                method: \"POST\",\n                body: displayTasks\n              });\n\n            case 15:\n              resp = _context2.sent;\n              _context2.next = 18;\n              return resp.json();\n\n            case 18:\n              json = _context2.sent;\n              this.newTasks = json;\n              this.myRoom = sessionStorage.getItem(\"eventCode\");\n              obj = {\n                roomName: this.myRoom\n              };\n              this.socket.emit(\"join_room\", obj);\n\n            case 23:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, this);\n    }));\n\n    function beforeCreate() {\n      return _beforeCreate.apply(this, arguments);\n    }\n\n    return beforeCreate;\n  }(),\n  mounted: function mounted() {\n    var _this2 = this;\n\n    this.socket.on(\"receive_msg\", function (data) {\n      _this2.allMsgs.push(data);\n    });\n  }\n};",{"version":3,"sources":["EventDetails.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div id=\"eventdetails_page\">\n    <div class=\"container\">\n      <div class=\"row\">\n        <div id=\"eventLeft\">\n          <div id=\"leftBox\">\n          <div id=\"eventInfo\" v-for=\"item in event\" v-bind:key=\"item\">\n            <div id=\"eventnameInfo\">{{item.eventname}}</div>\n            <div id=\"eventdateInfo\">\n              <span style=\"font-weight: 600\">When:</span>\n              {{item.eventdate}}\n            </div>\n            <div id=\"eventtimeInfo\">\n              <span style=\"font-weight: 600\">Time:</span>\n              {{item.eventtime}}\n            </div>\n            <div id=\"eventlocationInfo\">\n              <span style=\"font-weight: 600\">Where:</span>\n              {{item.eventlocation}}\n            </div>\n            <div v-if=\"isAdmin\" id=\"eventCodeInfo\">\n              <span style=\"font-weight: 600\">Event Code:</span>\n              {{item.eventCode}}\n            </div>\n            <button class=\"goDashboard-btn\" @click=\"goToDashboard\">DASHBOARD</button>\n            <button v-if=\"isUser\" @click=\"refreshPage\" class=\"goRefresh-btn\">REFRESH</button>\n            <button v-if=\"isAdmin\" class=\"goEdit-btn\" @click=\"goEdit\">EDIT EVENT</button>\n            <button v-if=\"isAdmin\" class=\"goDelete-btn\" @click=\"deleteEvent\">DELETE EVENT</button>\n          </div>\n\n          <div class=\"chatBox\">\n            <div class=\"chatContain\">\n              <div v-for=\"m in allMsgs\">\n                \n                <div \n                class=\"pl-3 pr-3 pb-2 pt-2 msg_container\"\n                v-if=\"m.username === username\">\n                  {{m.username}}: {{m.msg}}\n                </div>\n\n                <div v-else\n                class=\"pl-3 pr-3 pb-2 pt-2 msg_container2\">\n                  {{m.username}}: {{m.msg}}\n                </div>\n                \n              </div>\n\n            </div>\n\n            <div class=\"col-lg-12\">\n            <input\n              v-model=\"msg\"\n              class=\"col-lg-11\"\n              id=\"type\"\n              type=\"text\"\n              placeholder=\"Type your message here and press enter...\"\n              @keyup.enter=\"sendMessage\"\n            >\n            </div>\n             </div>\n                                    </div>\n        </div>\n        </div>\n\n        <div id=\"eventRight\"></div>\n        <AddTask v-if=\"isAdmin\"/>\n        <TaskList v-if=\"isUser\"/>\n      </div>\n    </div>\n</template>\n\n<style>\n@import url(\"https://fonts.googleapis.com/css?family=Nunito\");\n@import \"./style.css\";\n@import \"https://stackpath.bootstrapcdn.com/bootstrap/4.2.1/css/bootstrap.min.css\";\n</style>\n\n<script>\nimport AddTask from \"@/components/AddTask.vue\";\nimport TaskList from \"@/components/TaskList.vue\";\n\nimport io from \"socket.io-client\";\n\nexport default {\n  name: \"eventDetails\",\n  components: {\n    AddTask: AddTask,\n    TaskList: TaskList\n  },\n  data() {\n    return {\n      event: \"\",\n      eventname: \"\",\n      eventdate: \"\",\n      eventtime: \"\",\n      eventlocation: \"\",\n      display: false,\n      eventCode: \"\",\n      tasks: \"\",\n      newTasks: \"\",\n      isAdmin: false,\n      isUser: false,\n      taskID: this.store.taskID,\n      socket: io(\"https://gettogetherserver.herokuapp.com/chat\"),\n      msg: \"\",\n      allMsgs: [],\n      myRoom: \"\"\n    };\n  },\n  methods: {\n    sendMessage: function() {\n      this.username = sessionStorage.getItem(\"username\");\n\n      var obj = {\n        username: this.username,\n        msg: this.msg,\n        roomName: this.myRoom\n      };\n\n      this.socket.emit(\"send_msg\", obj);\n      this.store.username = this.username;\n      this.msg = \"\";\n    },\n    refreshPage: function() {\n      this.$router.go();\n    },\n    goToDashboard: function() {\n      this.$router.push(\"dashboard\");\n    },\n    goEdit: function() {\n      this.$router.push(\"editpage\");\n    },\n    deleteEvent: async function() {\n      this.$swal({\n        title: \"Are you sure?\",\n        text: \"If you click yes, this event will be deleted forever.\",\n        type: \"warning\",\n        showCancelButton: true,\n        confirmButtonText: \"Yes, Delete this event\",\n        cancelButtonText: \"No, keep it\",\n        confirmButtonColor: \"lightcoral\",\n        cancelButtonColor: \"lightblue\",\n        showCloseButton: true,\n        showLoaderOnConfirm: true\n      }).then(result => {\n        if (result.value) {\n          this.$swal(\n            \"Deleted\",\n            \"You successfully deleted this event\",\n            \"success\"\n          );\n\n          this.$router.push(\"dashboard\");\n\n          var deleteEvent = new FormData();\n          deleteEvent.append(\"eventCode\", sessionStorage.getItem(\"eventCode\"));\n          var resp = fetch(\n            \"https://gettogetherbcit.herokuapp.com/mysql/deleteEvents.php\",\n            {\n              method: \"POST\",\n              body: deleteEvent\n            }\n          );\n        } else {\n          this.$swal(\"Cancelled\", \"Your event still exists\", \"info\");\n        }\n      });\n    }\n  },\n  beforeCreate: async function() {\n    var eventForm = new FormData();\n    eventForm.append(\"eventCode\", sessionStorage.getItem(\"eventCode\"));\n\n    var resp = await fetch(\n      \"https://gettogetherbcit.herokuapp.com/mysql/selectEvent.php\",\n      {\n        method: \"POST\",\n        body: eventForm\n      }\n    );\n\n    var json = await resp.json();\n    this.event = json;\n\n    if (json) {\n      this.store.eventID = json[0].id;\n      this.store.eventname = json[0].eventname;\n      this.store.eventlocation = json[0].eventlocation;\n      this.store.eventdate = json[0].eventdate;\n      this.store.eventenddate = json[0].eventenddate;\n      this.store.eventtime = json[0].eventtime;\n      this.store.eventend = json[0].eventend;\n      this.store.eventnote = json[0].eventnote;\n\n      var temp = sessionStorage.getItem(\"userID\");\n      var temp2 = json[0].admin;\n\n      if (sessionStorage.getItem(\"userID\") === json[0].admin) {\n        this.isAdmin = true;\n      } else {\n        this.isAdmin = false;\n        this.isUser = true;\n      }\n    }\n\n    var displayTasks = new FormData();\n    displayTasks.append(\"eventCode\", sessionStorage.getItem(\"eventCode\"));\n    displayTasks.append(\"tasks\", this.tasks);\n\n    var resp = await fetch(\n      \"https://gettogetherbcit.herokuapp.com/mysql/getJoinedTasks.php\",\n      {\n        method: \"POST\",\n        body: displayTasks\n      }\n    );\n\n    var json = await resp.json();\n    this.newTasks = json;\n\n    this.myRoom = sessionStorage.getItem(\"eventCode\");\n\n    var obj = {\n      roomName: this.myRoom\n    };\n\n    this.socket.emit(\"join_room\", obj);\n  },\n  mounted() {\n    this.socket.on(\"receive_msg\", data => {\n      this.allMsgs.push(data);\n    });\n  }\n};\n</script>\n"],"sourceRoot":"src/components"}]}