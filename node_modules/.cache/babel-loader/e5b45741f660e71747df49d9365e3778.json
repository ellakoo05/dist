{"remainingRequest":"/Users/ellayeonjekoo/Desktop/GetTogether/gettogether/node_modules/babel-loader/lib/index.js!/Users/ellayeonjekoo/Desktop/GetTogether/gettogether/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/ellayeonjekoo/Desktop/GetTogether/gettogether/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/ellayeonjekoo/Desktop/GetTogether/gettogether/src/components/TaskList.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/ellayeonjekoo/Desktop/GetTogether/gettogether/src/components/TaskList.vue","mtime":1552447121552},{"path":"/Users/ellayeonjekoo/Desktop/GetTogether/gettogether/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ellayeonjekoo/Desktop/GetTogether/gettogether/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/ellayeonjekoo/Desktop/GetTogether/gettogether/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ellayeonjekoo/Desktop/GetTogether/gettogether/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _getIterator from \"/Users/ellayeonjekoo/Desktop/GetTogether/gettogether/node_modules/@babel/runtime-corejs2/core-js/get-iterator\";\nimport \"core-js/modules/web.dom.iterable\";\nimport _Map from \"/Users/ellayeonjekoo/Desktop/GetTogether/gettogether/node_modules/@babel/runtime-corejs2/core-js/map\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/Users/ellayeonjekoo/Desktop/GetTogether/gettogether/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  name: \"eventDetails\",\n  data: function data() {\n    return {\n      newTasks: \"\",\n      isTasksNotEmpty: false\n    };\n  },\n  methods: {\n    selectTask: function () {\n      var _selectTask = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee(id) {\n        var selectTask, resp, json;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                selectTask = new FormData();\n                selectTask.append(\"taskID\", id);\n                selectTask.append(\"userID\", sessionStorage.getItem(\"userID\"));\n                selectTask.append(\"eventCode\", sessionStorage.getItem(\"eventCode\"));\n                _context.next = 6;\n                return fetch(\"https://gettogetherbcit.herokuapp.com/mysql/assignTasks.php\", {\n                  method: \"POST\",\n                  body: selectTask\n                });\n\n              case 6:\n                resp = _context.sent;\n                _context.next = 9;\n                return resp.json();\n\n              case 9:\n                json = _context.sent;\n\n                if (json) {\n                  alert(\"thank you for your input!\");\n                }\n\n              case 11:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function selectTask(_x) {\n        return _selectTask.apply(this, arguments);\n      }\n\n      return selectTask;\n    }()\n  },\n  beforeCreate: function () {\n    var _beforeCreate = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee2() {\n      var displayTasks, resp, json, tasksMap, i, assignedUsers, resp2, json2, usersArray, taskObject, tasksJSONArray, temp, _iteratorNormalCompletion, _didIteratorError, _iteratorError, _iterator, _step, task;\n\n      return regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              displayTasks = new FormData();\n              displayTasks.append(\"eventCode\", sessionStorage.getItem(\"eventCode\"));\n              _context2.next = 4;\n              return fetch(\"https://gettogetherbcit.herokuapp.com/mysql/getJoinedTasks.php\", {\n                method: \"POST\",\n                body: displayTasks\n              });\n\n            case 4:\n              resp = _context2.sent;\n              _context2.next = 7;\n              return resp.json();\n\n            case 7:\n              json = _context2.sent;\n\n              if (!(json.length > 0)) {\n                _context2.next = 46;\n                break;\n              }\n\n              this.isTasksNotEmpty = true;\n              debugger;\n              tasksMap = new _Map();\n\n              for (i = 0; i < json.length; i++) {\n                tasksMap.set(json[i].id, json[i]);\n              }\n\n              this.newTasks = tasksMap;\n              assignedUsers = new FormData();\n              assignedUsers.append(\"eventCode\", sessionStorage.getItem(\"eventCode\"));\n              _context2.next = 18;\n              return fetch(\"https://gettogetherbcit.herokuapp.com/mysql/getAssignedUsers.php\", {\n                method: \"POST\",\n                body: assignedUsers\n              });\n\n            case 18:\n              resp2 = _context2.sent;\n              _context2.next = 21;\n              return resp2.json();\n\n            case 21:\n              json2 = _context2.sent;\n              usersArray = [];\n\n              for (i = 0; i < json2.length; i++) {\n                if (tasksMap.has(json2[i].taskID)) {\n                  taskObject = tasksMap.get(json2[i].taskID);\n\n                  if (taskObject.assignedUsers !== undefined) {\n                    usersArray = taskObject.assignedUsers;\n                  } else {\n                    usersArray = [];\n                  }\n\n                  usersArray.push(json2[i].username);\n                  taskObject.assignedUsers = usersArray;\n                }\n\n                tasksMap.set(json2[i].taskID, taskObject);\n              }\n\n              tasksJSONArray = [];\n              temp = tasksMap.entries();\n              _iteratorNormalCompletion = true;\n              _didIteratorError = false;\n              _iteratorError = undefined;\n              _context2.prev = 29;\n\n              for (_iterator = _getIterator(temp); !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n                task = _step.value;\n                tasksJSONArray.push(task[1]);\n              }\n\n              _context2.next = 37;\n              break;\n\n            case 33:\n              _context2.prev = 33;\n              _context2.t0 = _context2[\"catch\"](29);\n              _didIteratorError = true;\n              _iteratorError = _context2.t0;\n\n            case 37:\n              _context2.prev = 37;\n              _context2.prev = 38;\n\n              if (!_iteratorNormalCompletion && _iterator.return != null) {\n                _iterator.return();\n              }\n\n            case 40:\n              _context2.prev = 40;\n\n              if (!_didIteratorError) {\n                _context2.next = 43;\n                break;\n              }\n\n              throw _iteratorError;\n\n            case 43:\n              return _context2.finish(40);\n\n            case 44:\n              return _context2.finish(37);\n\n            case 45:\n              this.newTasks = tasksJSONArray;\n\n            case 46:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, this, [[29, 33, 37, 45], [38,, 40, 44]]);\n    }));\n\n    function beforeCreate() {\n      return _beforeCreate.apply(this, arguments);\n    }\n\n    return beforeCreate;\n  }()\n};",{"version":3,"sources":["TaskList.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div id=\"tasklist\">\n    <div id=\"eventRight\">\n      <div class=\"displayItems\" v-if=\"isTasksNotEmpty\" v-for=\"item in newTasks\" v-bind:key=\"item\">\n        <div class=\"listItemsForUsers\">\n          {{item.tasks}}\n          <br>\n          <div class=\"userList\" v-for=\"user in item.assignedUsers\" v-bind:key=\"user\">\n            <div>{{user}}</div>\n          </div>\n          <button class=\"taskSignup\" @click=\"selectTask(item.id)\">SELECT</button>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<style>\n@import url(\"https://fonts.googleapis.com/css?family=Nunito\");\n@import \"./style.css\";\n</style>\n<script>\nexport default {\n  name: \"eventDetails\",\n  data() {\n    return {\n      newTasks: \"\",\n      isTasksNotEmpty: false\n    };\n  },\n  methods: {\n    selectTask: async function(id) {\n      var selectTask = new FormData();\n      selectTask.append(\"taskID\", id);\n      selectTask.append(\"userID\", sessionStorage.getItem(\"userID\"));\n      selectTask.append(\"eventCode\", sessionStorage.getItem(\"eventCode\"));\n\n      var resp = await fetch(\n        \"https://gettogetherbcit.herokuapp.com/mysql/assignTasks.php\",\n        {\n          method: \"POST\",\n          body: selectTask\n        }\n      );\n\n      var json = await resp.json();\n      if (json) {\n        alert(\"thank you for your input!\");\n      }\n    }\n  },\n  beforeCreate: async function() {\n    var displayTasks = new FormData();\n    displayTasks.append(\"eventCode\", sessionStorage.getItem(\"eventCode\"));\n\n    var resp = await fetch(\n      \"https://gettogetherbcit.herokuapp.com/mysql/getJoinedTasks.php\",\n      {\n        method: \"POST\",\n        body: displayTasks\n      }\n    );\n\n    var json = await resp.json();\n\n    if (json.length > 0) {\n      this.isTasksNotEmpty = true;\n      debugger;\n      var tasksMap = new Map();\n      for (var i = 0; i < json.length; i++) {\n        tasksMap.set(json[i].id, json[i]);\n      }\n\n      this.newTasks = tasksMap;\n\n      var assignedUsers = new FormData();\n      assignedUsers.append(\"eventCode\", sessionStorage.getItem(\"eventCode\"));\n\n      var resp2 = await fetch(\n        \"https://gettogetherbcit.herokuapp.com/mysql/getAssignedUsers.php\",\n        {\n          method: \"POST\",\n          body: assignedUsers\n        }\n      );\n\n      var json2 = await resp2.json();\n      var usersArray = [];\n      for (var i = 0; i < json2.length; i++) {\n        if (tasksMap.has(json2[i].taskID)) {\n          var taskObject = tasksMap.get(json2[i].taskID);\n          if (taskObject.assignedUsers !== undefined) {\n            usersArray = taskObject.assignedUsers;\n          } else {\n            usersArray = [];\n          }\n          usersArray.push(json2[i].username);\n          taskObject.assignedUsers = usersArray;\n        }\n        tasksMap.set(json2[i].taskID, taskObject);\n      }\n\n      var tasksJSONArray = [];\n      var temp = tasksMap.entries();\n\n      for (var task of temp) {\n        tasksJSONArray.push(task[1]);\n      }\n      this.newTasks = tasksJSONArray;\n    }\n  }\n};\n</script>\n"],"sourceRoot":"src/components"}]}