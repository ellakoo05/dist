{"remainingRequest":"/Users/ellayeonjekoo/Desktop/GetTogether/gettogether/node_modules/thread-loader/dist/cjs.js!/Users/ellayeonjekoo/Desktop/GetTogether/gettogether/node_modules/babel-loader/lib/index.js!/Users/ellayeonjekoo/Desktop/GetTogether/gettogether/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/ellayeonjekoo/Desktop/GetTogether/gettogether/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/ellayeonjekoo/Desktop/GetTogether/gettogether/src/components/AddTask.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/ellayeonjekoo/Desktop/GetTogether/gettogether/src/components/AddTask.vue","mtime":1553019502879},{"path":"/Users/ellayeonjekoo/Desktop/GetTogether/gettogether/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ellayeonjekoo/Desktop/GetTogether/gettogether/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ellayeonjekoo/Desktop/GetTogether/gettogether/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/ellayeonjekoo/Desktop/GetTogether/gettogether/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ellayeonjekoo/Desktop/GetTogether/gettogether/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _getIterator from \"/Users/ellayeonjekoo/Desktop/GetTogether/gettogether/node_modules/@babel/runtime-corejs2/core-js/get-iterator\";\nimport \"core-js/modules/web.dom.iterable\";\nimport _Map from \"/Users/ellayeonjekoo/Desktop/GetTogether/gettogether/node_modules/@babel/runtime-corejs2/core-js/map\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/Users/ellayeonjekoo/Desktop/GetTogether/gettogether/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport \"core-js/modules/es6.array.iterator\";\nimport \"core-js/modules/es6.promise\";\nimport \"core-js/modules/es7.promise.finally\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport TaskList from \"@/components/TaskList.vue\";\nexport default {\n  name: \"AddTask\",\n  components: {\n    TaskList: TaskList\n  },\n  data: function data() {\n    return {\n      tasks: \"\",\n      newTasks: \"\"\n    };\n  },\n  methods: {\n    deleteTask: function () {\n      var _deleteTask = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee(event) {\n        var parentDiv, deleteForm, resp;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                parentDiv = event.target.parentElement;\n                event.target.style.display = \"none\";\n                parentDiv.style.display = \"none\";\n                deleteForm = new FormData();\n                deleteForm.append(\"taskID\", event.target.parentElement.id);\n                _context.next = 7;\n                return fetch(\"https://gettogetherbcit.herokuapp.com/mysql/deleteTasks.php\", {\n                  method: \"POST\",\n                  body: deleteForm\n                });\n\n              case 7:\n                resp = _context.sent;\n\n              case 8:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function deleteTask(_x) {\n        return _deleteTask.apply(this, arguments);\n      }\n\n      return deleteTask;\n    }(),\n    editTask: function () {\n      var _editTask = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee2(event) {\n        var _this = this;\n\n        var editTask, resp, result, task, taskText, updateButton, inputBox;\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                editTask = new FormData();\n                editTask.append(\"tasks\", event.target.parentElement.querySelector(\".updateInput\").value);\n                editTask.append(\"taskID\", event.target.parentElement.id);\n                _context2.next = 5;\n                return fetch(\"https://gettogetherbcit.herokuapp.com/mysql/updateTasks.php\", {\n                  method: \"POST\",\n                  body: editTask\n                });\n\n              case 5:\n                resp = _context2.sent;\n                _context2.next = 8;\n                return resp.json();\n\n              case 8:\n                result = _context2.sent;\n\n                if (!result) {\n                  alert(\"update failed. try again\");\n                } else {\n                  task = event.target.parentElement;\n                  taskText = task.querySelector(\".taskText\");\n                  updateButton = event.target;\n\n                  updateButton.onclick = function (e) {\n                    _this.changeEditInput(e);\n                  };\n\n                  updateButton.style.backgroundImage = \"url('https://image.flaticon.com/icons/svg/1159/1159633.svg')\";\n                  taskText.innerHTML = event.target.parentElement.querySelector(\".updateInput\").value;\n                  inputBox = task.querySelector(\".updateInput\");\n                  inputBox.style.display = \"none\";\n                  inputBox.value = \"\";\n                }\n\n              case 10:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function editTask(_x2) {\n        return _editTask.apply(this, arguments);\n      }\n\n      return editTask;\n    }(),\n    createTaskElement: function createTaskElement(taskID, inputValue, assignedUsers) {\n      var _this2 = this;\n\n      var i;\n      var li = document.createElement(\"div\");\n      var taskText = document.createElement(\"div\");\n      taskText.className = \"taskText\";\n      taskText.innerHTML = inputValue;\n      li.id = taskID;\n      li.className = \"listItems\";\n      li.appendChild(taskText);\n\n      if (inputValue === \"\") {\n        alert(\"You have to write something!\");\n      } else {\n        document.getElementById(\"myUL\").appendChild(li);\n      }\n\n      document.getElementById(\"myInput\").value = \"\";\n      var updateInput = document.createElement(\"input\");\n      updateInput.className = \"updateInput\";\n      updateInput.style.display = \"none\";\n      li.appendChild(updateInput); // create 'x' button\n\n      var deleteButton = document.createElement(\"span\");\n      deleteButton.className = \"deleteButton\";\n      li.appendChild(deleteButton); //create update button\n\n      var updateButton = document.createElement(\"span\");\n      updateButton.className = \"updateButton\";\n      li.appendChild(updateButton);\n\n      updateButton.onclick = function (e) {\n        _this2.changeEditInput(e);\n      };\n\n      var deleteButton = document.getElementsByClassName(\"deleteButton\");\n\n      for (i = 0; i < deleteButton.length; i++) {\n        deleteButton[i].onclick = function (e) {\n          _this2.deleteTask(e);\n        };\n      }\n\n      if (assignedUsers !== undefined) {\n        for (i = 0; i < assignedUsers.length; i++) {\n          var assignedUserList = document.createElement(\"div\");\n          assignedUserList.className = \"userListForAdmin\";\n          assignedUserList.innerHTML = assignedUsers[i];\n          li.appendChild(assignedUserList);\n        }\n      }\n    },\n    changeEditInput: function () {\n      var _changeEditInput = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee3(event) {\n        var _this3 = this;\n\n        var task, taskText, updateButton, inputBox;\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                task = event.target.parentElement;\n                taskText = task.querySelector(\".taskText\");\n                updateButton = event.target;\n\n                updateButton.onclick = function (e) {\n                  _this3.editTask(e);\n                };\n\n                updateButton.style.backgroundImage = \"url('https://image.flaticon.com/icons/svg/128/128384.svg')\";\n                inputBox = task.querySelector(\".updateInput\");\n                inputBox.style.display = \"block\";\n                inputBox.style.margin = \"auto\";\n                inputBox.value = taskText.innerHTML;\n                taskText.innerHTML = \"\";\n\n              case 10:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function changeEditInput(_x3) {\n        return _changeEditInput.apply(this, arguments);\n      }\n\n      return changeEditInput;\n    }(),\n    InsertTask: function () {\n      var _InsertTask = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee4() {\n        var taskForm, inputValue, resp, json;\n        return regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                taskForm = new FormData();\n                inputValue = document.getElementById(\"myInput\").value;\n                taskForm.append(\"tasks\", this.tasks);\n                taskForm.append(\"eventCode\", sessionStorage.getItem(\"eventCode\"));\n\n                if (!(inputValue === \"\")) {\n                  _context4.next = 8;\n                  break;\n                }\n\n                alert(\"You have to write something!\");\n                _context4.next = 15;\n                break;\n\n              case 8:\n                _context4.next = 10;\n                return fetch(\"https://gettogetherbcit.herokuapp.com/mysql/insertTasks.php\", {\n                  method: \"POST\",\n                  body: taskForm\n                });\n\n              case 10:\n                resp = _context4.sent;\n                _context4.next = 13;\n                return resp.json();\n\n              case 13:\n                json = _context4.sent;\n\n                if (json) {\n                  this.createTaskElement(json, inputValue, undefined);\n                }\n\n              case 15:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function InsertTask() {\n        return _InsertTask.apply(this, arguments);\n      }\n\n      return InsertTask;\n    }()\n  },\n  beforeCreate: function () {\n    var _beforeCreate = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee5() {\n      var displayTasks, resp, json, tasksMap, i, assignedUsers, resp2, json2, usersArray, taskObject, tasksJSONArray, temp, _iteratorNormalCompletion, _didIteratorError, _iteratorError, _iterator, _step, task;\n\n      return regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              displayTasks = new FormData();\n              displayTasks.append(\"eventCode\", sessionStorage.getItem(\"eventCode\"));\n              _context5.next = 4;\n              return fetch(\"https://gettogetherbcit.herokuapp.com/mysql/getJoinedTasks.php\", {\n                method: \"POST\",\n                body: displayTasks\n              });\n\n            case 4:\n              resp = _context5.sent;\n              _context5.next = 7;\n              return resp.json();\n\n            case 7:\n              json = _context5.sent;\n\n              if (!(json.length > 0)) {\n                _context5.next = 44;\n                break;\n              }\n\n              this.isTasksNotEmpty = true;\n              tasksMap = new _Map();\n\n              for (i = 0; i < json.length; i++) {\n                tasksMap.set(json[i].id, json[i]);\n              }\n\n              this.newTasks = tasksMap;\n              assignedUsers = new FormData();\n              assignedUsers.append(\"eventCode\", sessionStorage.getItem(\"eventCode\"));\n              _context5.next = 17;\n              return fetch(\"https://gettogetherbcit.herokuapp.com/mysql/getAssignedUsers.php\", {\n                method: \"POST\",\n                body: assignedUsers\n              });\n\n            case 17:\n              resp2 = _context5.sent;\n              _context5.next = 20;\n              return resp2.json();\n\n            case 20:\n              json2 = _context5.sent;\n              usersArray = [];\n\n              for (i = 0; i < json2.length; i++) {\n                if (tasksMap.has(json2[i].taskID)) {\n                  taskObject = tasksMap.get(json2[i].taskID);\n\n                  if (taskObject.assignedUsers !== undefined) {\n                    usersArray = taskObject.assignedUsers;\n                  } else {\n                    usersArray = [];\n                  }\n\n                  usersArray.push(json2[i].username);\n                  taskObject.assignedUsers = usersArray;\n                }\n\n                tasksMap.set(json2[i].taskID, taskObject);\n              }\n\n              tasksJSONArray = [];\n              temp = tasksMap.entries();\n              _iteratorNormalCompletion = true;\n              _didIteratorError = false;\n              _iteratorError = undefined;\n              _context5.prev = 28;\n\n              for (_iterator = _getIterator(temp); !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n                task = _step.value;\n                this.createTaskElement(task[1].id, task[1].tasks, task[1].assignedUsers);\n              }\n\n              _context5.next = 36;\n              break;\n\n            case 32:\n              _context5.prev = 32;\n              _context5.t0 = _context5[\"catch\"](28);\n              _didIteratorError = true;\n              _iteratorError = _context5.t0;\n\n            case 36:\n              _context5.prev = 36;\n              _context5.prev = 37;\n\n              if (!_iteratorNormalCompletion && _iterator.return != null) {\n                _iterator.return();\n              }\n\n            case 39:\n              _context5.prev = 39;\n\n              if (!_didIteratorError) {\n                _context5.next = 42;\n                break;\n              }\n\n              throw _iteratorError;\n\n            case 42:\n              return _context5.finish(39);\n\n            case 43:\n              return _context5.finish(36);\n\n            case 44:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5, this, [[28, 32, 36, 44], [37,, 39, 43]]);\n    }));\n\n    function beforeCreate() {\n      return _beforeCreate.apply(this, arguments);\n    }\n\n    return beforeCreate;\n  }()\n};",{"version":3,"sources":["AddTask.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div id=\"addtask\">\n    <div id=\"tasks\">\n      <div id=\"myDIV\" class=\"header\">\n        <h3>Add Tasks</h3>\n        <input type=\"text\" id=\"myInput\" v-model=\"tasks\" placeholder=\"New Task...\">\n        <span @click=\"InsertTask\" class=\"addBtn\">Add</span>\n      </div>\n\n      <ul id=\"myUL\"></ul>\n    </div>\n  </div>\n</template>\n\n<style>\n@import url(\"https://fonts.googleapis.com/css?family=Nunito\");\n@import \"./style.css\";\n</style>\n\n<script>\nimport TaskList from \"@/components/TaskList.vue\";\nexport default {\n  name: \"AddTask\",\n  components: {\n    TaskList: TaskList\n  },\n  data() {\n    return {\n      tasks: \"\",\n      newTasks: \"\"\n    };\n  },\n  methods: {\n    deleteTask: async function(event) {\n      var parentDiv = event.target.parentElement;\n      event.target.style.display = \"none\";\n      parentDiv.style.display = \"none\";\n      var deleteForm = new FormData();\n      deleteForm.append(\"taskID\", event.target.parentElement.id);\n      var resp = await fetch(\n        \"https://gettogetherbcit.herokuapp.com/mysql/deleteTasks.php\",\n        {\n          method: \"POST\",\n          body: deleteForm\n        }\n      );\n    },\n    editTask: async function(event) {\n      var editTask = new FormData();\n      editTask.append(\n        \"tasks\",\n        event.target.parentElement.querySelector(\".updateInput\").value\n      );\n      editTask.append(\"taskID\", event.target.parentElement.id);\n      var resp = await fetch(\n        \"https://gettogetherbcit.herokuapp.com/mysql/updateTasks.php\",\n        {\n          method: \"POST\",\n          body: editTask\n        }\n      );\n\n      var result = await resp.json();\n\n      if (!result) {\n        alert(\"update failed. try again\");\n      } else {\n        var task = event.target.parentElement;\n        var taskText = task.querySelector(\".taskText\");\n\n        var updateButton = event.target;\n        updateButton.onclick = e => {\n          this.changeEditInput(e);\n        };\n\n        updateButton.style.backgroundImage =\n          \"url('https://image.flaticon.com/icons/svg/1159/1159633.svg')\";\n\n        taskText.innerHTML = event.target.parentElement.querySelector(\n          \".updateInput\"\n        ).value;\n\n        var inputBox = task.querySelector(\".updateInput\");\n        inputBox.style.display = \"none\";\n        inputBox.value = \"\";\n      }\n    },\n    createTaskElement: function(taskID, inputValue, assignedUsers) {\n      var i;\n      var li = document.createElement(\"div\");\n      var taskText = document.createElement(\"div\");\n      taskText.className = \"taskText\";\n      taskText.innerHTML = inputValue;\n      li.id = taskID;\n      li.className = \"listItems\";\n      li.appendChild(taskText);\n      if (inputValue === \"\") {\n        alert(\"You have to write something!\");\n      } else {\n        document.getElementById(\"myUL\").appendChild(li);\n      }\n      document.getElementById(\"myInput\").value = \"\";\n\n      var updateInput = document.createElement(\"input\");\n      updateInput.className = \"updateInput\";\n      updateInput.style.display = \"none\";\n      li.appendChild(updateInput);\n\n      // create 'x' button\n      var deleteButton = document.createElement(\"span\");\n      deleteButton.className = \"deleteButton\";\n      li.appendChild(deleteButton);\n\n      //create update button\n      var updateButton = document.createElement(\"span\");\n      updateButton.className = \"updateButton\";\n      li.appendChild(updateButton);\n\n      updateButton.onclick = e => {\n        this.changeEditInput(e);\n      };\n\n      var deleteButton = document.getElementsByClassName(\"deleteButton\");\n\n      for (i = 0; i < deleteButton.length; i++) {\n        deleteButton[i].onclick = e => {\n          this.deleteTask(e);\n        };\n      }\n\n      if (assignedUsers !== undefined) {\n        for (i = 0; i < assignedUsers.length; i++) {\n          var assignedUserList = document.createElement(\"div\");\n          assignedUserList.className = \"userListForAdmin\";\n          assignedUserList.innerHTML = assignedUsers[i];\n          li.appendChild(assignedUserList);\n        }\n      }\n    },\n    changeEditInput: async function(event) {\n      var task = event.target.parentElement;\n      var taskText = task.querySelector(\".taskText\");\n\n      var updateButton = event.target;\n      updateButton.onclick = e => {\n        this.editTask(e);\n      };\n\n      updateButton.style.backgroundImage =\n        \"url('https://image.flaticon.com/icons/svg/128/128384.svg')\";\n\n      var inputBox = task.querySelector(\".updateInput\");\n      inputBox.style.display = \"block\";\n      inputBox.style.margin = \"auto\";\n      inputBox.value = taskText.innerHTML;\n\n      taskText.innerHTML = \"\";\n    },\n    InsertTask: async function() {\n      var taskForm = new FormData();\n      var inputValue = document.getElementById(\"myInput\").value;\n      taskForm.append(\"tasks\", this.tasks);\n      taskForm.append(\"eventCode\", sessionStorage.getItem(\"eventCode\"));\n\n      if (inputValue === \"\") {\n        alert(\"You have to write something!\");\n      } else {\n        var resp = await fetch(\n          \"https://gettogetherbcit.herokuapp.com/mysql/insertTasks.php\",\n          {\n            method: \"POST\",\n            body: taskForm\n          }\n        );\n        var json = await resp.json();\n\n        if (json) {\n          this.createTaskElement(json, inputValue, undefined);\n        }\n      }\n    }\n  },\n  beforeCreate: async function() {\n    var displayTasks = new FormData();\n    displayTasks.append(\"eventCode\", sessionStorage.getItem(\"eventCode\"));\n\n    var resp = await fetch(\n      \"https://gettogetherbcit.herokuapp.com/mysql/getJoinedTasks.php\",\n      {\n        method: \"POST\",\n        body: displayTasks\n      }\n    );\n\n    var json = await resp.json();\n\n    if (json.length > 0) {\n      this.isTasksNotEmpty = true;\n      var tasksMap = new Map();\n      for (var i = 0; i < json.length; i++) {\n        tasksMap.set(json[i].id, json[i]);\n      }\n\n      this.newTasks = tasksMap;\n\n      var assignedUsers = new FormData();\n      assignedUsers.append(\"eventCode\", sessionStorage.getItem(\"eventCode\"));\n\n      var resp2 = await fetch(\n        \"https://gettogetherbcit.herokuapp.com/mysql/getAssignedUsers.php\",\n        {\n          method: \"POST\",\n          body: assignedUsers\n        }\n      );\n\n      var json2 = await resp2.json();\n      var usersArray = [];\n      for (var i = 0; i < json2.length; i++) {\n        if (tasksMap.has(json2[i].taskID)) {\n          var taskObject = tasksMap.get(json2[i].taskID);\n          if (taskObject.assignedUsers !== undefined) {\n            usersArray = taskObject.assignedUsers;\n          } else {\n            usersArray = [];\n          }\n          usersArray.push(json2[i].username);\n          taskObject.assignedUsers = usersArray;\n        }\n        tasksMap.set(json2[i].taskID, taskObject);\n      }\n\n      var tasksJSONArray = [];\n      var temp = tasksMap.entries();\n\n      for (var task of temp) {\n        this.createTaskElement(\n          task[1].id,\n          task[1].tasks,\n          task[1].assignedUsers\n        );\n      }\n    }\n  }\n};\n</script>\n"],"sourceRoot":"src/components"}]}