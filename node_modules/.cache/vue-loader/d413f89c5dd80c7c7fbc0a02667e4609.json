{"remainingRequest":"/Users/ellayeonjekoo/Desktop/GetTogether/gettogether/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/ellayeonjekoo/Desktop/GetTogether/gettogether/src/components/TaskList.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/Users/ellayeonjekoo/Desktop/GetTogether/gettogether/src/components/TaskList.vue","mtime":1552447121552},{"path":"/Users/ellayeonjekoo/Desktop/GetTogether/gettogether/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/Users/ellayeonjekoo/Desktop/GetTogether/gettogether/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/ellayeonjekoo/Desktop/GetTogether/gettogether/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/ellayeonjekoo/Desktop/GetTogether/gettogether/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ellayeonjekoo/Desktop/GetTogether/gettogether/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n@import url(\"https://fonts.googleapis.com/css?family=Nunito\");\n@import \"./style.css\";\n",{"version":3,"sources":["TaskList.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AAkBA;AACA","file":"TaskList.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div id=\"tasklist\">\n    <div id=\"eventRight\">\n      <div class=\"displayItems\" v-if=\"isTasksNotEmpty\" v-for=\"item in newTasks\" v-bind:key=\"item\">\n        <div class=\"listItemsForUsers\">\n          {{item.tasks}}\n          <br>\n          <div class=\"userList\" v-for=\"user in item.assignedUsers\" v-bind:key=\"user\">\n            <div>{{user}}</div>\n          </div>\n          <button class=\"taskSignup\" @click=\"selectTask(item.id)\">SELECT</button>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<style>\n@import url(\"https://fonts.googleapis.com/css?family=Nunito\");\n@import \"./style.css\";\n</style>\n<script>\nexport default {\n  name: \"eventDetails\",\n  data() {\n    return {\n      newTasks: \"\",\n      isTasksNotEmpty: false\n    };\n  },\n  methods: {\n    selectTask: async function(id) {\n      var selectTask = new FormData();\n      selectTask.append(\"taskID\", id);\n      selectTask.append(\"userID\", sessionStorage.getItem(\"userID\"));\n      selectTask.append(\"eventCode\", sessionStorage.getItem(\"eventCode\"));\n\n      var resp = await fetch(\n        \"https://gettogetherbcit.herokuapp.com/mysql/assignTasks.php\",\n        {\n          method: \"POST\",\n          body: selectTask\n        }\n      );\n\n      var json = await resp.json();\n      if (json) {\n        alert(\"thank you for your input!\");\n      }\n    }\n  },\n  beforeCreate: async function() {\n    var displayTasks = new FormData();\n    displayTasks.append(\"eventCode\", sessionStorage.getItem(\"eventCode\"));\n\n    var resp = await fetch(\n      \"https://gettogetherbcit.herokuapp.com/mysql/getJoinedTasks.php\",\n      {\n        method: \"POST\",\n        body: displayTasks\n      }\n    );\n\n    var json = await resp.json();\n\n    if (json.length > 0) {\n      this.isTasksNotEmpty = true;\n      debugger;\n      var tasksMap = new Map();\n      for (var i = 0; i < json.length; i++) {\n        tasksMap.set(json[i].id, json[i]);\n      }\n\n      this.newTasks = tasksMap;\n\n      var assignedUsers = new FormData();\n      assignedUsers.append(\"eventCode\", sessionStorage.getItem(\"eventCode\"));\n\n      var resp2 = await fetch(\n        \"https://gettogetherbcit.herokuapp.com/mysql/getAssignedUsers.php\",\n        {\n          method: \"POST\",\n          body: assignedUsers\n        }\n      );\n\n      var json2 = await resp2.json();\n      var usersArray = [];\n      for (var i = 0; i < json2.length; i++) {\n        if (tasksMap.has(json2[i].taskID)) {\n          var taskObject = tasksMap.get(json2[i].taskID);\n          if (taskObject.assignedUsers !== undefined) {\n            usersArray = taskObject.assignedUsers;\n          } else {\n            usersArray = [];\n          }\n          usersArray.push(json2[i].username);\n          taskObject.assignedUsers = usersArray;\n        }\n        tasksMap.set(json2[i].taskID, taskObject);\n      }\n\n      var tasksJSONArray = [];\n      var temp = tasksMap.entries();\n\n      for (var task of temp) {\n        tasksJSONArray.push(task[1]);\n      }\n      this.newTasks = tasksJSONArray;\n    }\n  }\n};\n</script>\n"]}]}