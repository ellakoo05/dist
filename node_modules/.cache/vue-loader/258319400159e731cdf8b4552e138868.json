{"remainingRequest":"/Users/ellayeonjekoo/Desktop/GetTogether/gettogether/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/ellayeonjekoo/Desktop/GetTogether/gettogether/src/components/EventDetails.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/Users/ellayeonjekoo/Desktop/GetTogether/gettogether/src/components/EventDetails.vue","mtime":1553018436679},{"path":"/Users/ellayeonjekoo/Desktop/GetTogether/gettogether/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/Users/ellayeonjekoo/Desktop/GetTogether/gettogether/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/ellayeonjekoo/Desktop/GetTogether/gettogether/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/ellayeonjekoo/Desktop/GetTogether/gettogether/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ellayeonjekoo/Desktop/GetTogether/gettogether/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n@import url(\"https://fonts.googleapis.com/css?family=Nunito\");\n@import \"./style.css\";\n@import \"https://stackpath.bootstrapcdn.com/bootstrap/4.2.1/css/bootstrap.min.css\";\n",{"version":3,"sources":["EventDetails.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwEA;AACA;AACA","file":"EventDetails.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div id=\"eventdetails_page\">\n    <div class=\"container\">\n      <div class=\"row\">\n        <div id=\"eventLeft\">\n          <div id=\"leftBox\">\n          <div id=\"eventInfo\" v-for=\"item in event\" v-bind:key=\"item\">\n            <div id=\"eventnameInfo\">{{item.eventname}}</div>\n            <div id=\"eventdateInfo\">\n              <span style=\"font-weight: 600\">When:</span>\n              {{item.eventdate}}\n            </div>\n            <div id=\"eventtimeInfo\">\n              <span style=\"font-weight: 600\">Time:</span>\n              {{item.eventtime}}\n            </div>\n            <div id=\"eventlocationInfo\">\n              <span style=\"font-weight: 600\">Where:</span>\n              {{item.eventlocation}}\n            </div>\n            <div v-if=\"isAdmin\" id=\"eventCodeInfo\">\n              <span style=\"font-weight: 600\">Event Code:</span>\n              {{item.eventCode}}\n            </div>\n            <button class=\"goDashboard-btn\" @click=\"goToDashboard\">DASHBOARD</button>\n            <button v-if=\"isUser\" @click=\"refreshPage\" class=\"goRefresh-btn\">REFRESH</button>\n            <button v-if=\"isAdmin\" class=\"goEdit-btn\" @click=\"goEdit\">EDIT EVENT</button>\n            <button v-if=\"isAdmin\" class=\"goDelete-btn\" @click=\"deleteEvent\">DELETE EVENT</button>\n          </div>\n\n          <div class=\"chatBox\">\n            <div class=\"chatContain\">\n              <div v-for=\"m in allMsgs\">\n                \n                <div \n                class=\"pl-3 pr-3 pb-2 pt-2 msg_container\"\n                v-if=\"m.username === username\">\n                  {{m.username}}: {{m.msg}}\n                </div>\n\n                <div v-else\n                class=\"pl-3 pr-3 pb-2 pt-2 msg_container2\">\n                  {{m.username}}: {{m.msg}}\n                </div>\n                \n              </div>\n\n            </div>\n\n            <div class=\"col-lg-12\">\n            <input\n              v-model=\"msg\"\n              class=\"col-lg-11\"\n              id=\"type\"\n              type=\"text\"\n              placeholder=\"Type your message here and press enter...\"\n              @keyup.enter=\"sendMessage\"\n            >\n            </div>\n             </div>\n                                    </div>\n        </div>\n        </div>\n\n        <div id=\"eventRight\"></div>\n        <AddTask v-if=\"isAdmin\"/>\n        <TaskList v-if=\"isUser\"/>\n      </div>\n    </div>\n</template>\n\n<style>\n@import url(\"https://fonts.googleapis.com/css?family=Nunito\");\n@import \"./style.css\";\n@import \"https://stackpath.bootstrapcdn.com/bootstrap/4.2.1/css/bootstrap.min.css\";\n</style>\n\n<script>\nimport AddTask from \"@/components/AddTask.vue\";\nimport TaskList from \"@/components/TaskList.vue\";\n\nimport io from \"socket.io-client\";\n\nexport default {\n  name: \"eventDetails\",\n  components: {\n    AddTask: AddTask,\n    TaskList: TaskList\n  },\n  data() {\n    return {\n      event: \"\",\n      eventname: \"\",\n      eventdate: \"\",\n      eventtime: \"\",\n      eventlocation: \"\",\n      display: false,\n      eventCode: \"\",\n      tasks: \"\",\n      newTasks: \"\",\n      isAdmin: false,\n      isUser: false,\n      taskID: this.store.taskID,\n      socket: io(\"https://gettogetherserver.herokuapp.com/chat\"),\n      msg: \"\",\n      allMsgs: [],\n      myRoom: \"\"\n    };\n  },\n  methods: {\n    sendMessage: function() {\n      this.username = sessionStorage.getItem(\"username\");\n\n      var obj = {\n        username: this.username,\n        msg: this.msg,\n        roomName: this.myRoom\n      };\n\n      this.socket.emit(\"send_msg\", obj);\n      this.store.username = this.username;\n      this.msg = \"\";\n    },\n    refreshPage: function() {\n      this.$router.go();\n    },\n    goToDashboard: function() {\n      this.$router.push(\"dashboard\");\n    },\n    goEdit: function() {\n      this.$router.push(\"editpage\");\n    },\n    deleteEvent: async function() {\n      this.$swal({\n        title: \"Are you sure?\",\n        text: \"If you click yes, this event will be deleted forever.\",\n        type: \"warning\",\n        showCancelButton: true,\n        confirmButtonText: \"Yes, Delete this event\",\n        cancelButtonText: \"No, keep it\",\n        confirmButtonColor: \"lightcoral\",\n        cancelButtonColor: \"lightblue\",\n        showCloseButton: true,\n        showLoaderOnConfirm: true\n      }).then(result => {\n        if (result.value) {\n          this.$swal(\n            \"Deleted\",\n            \"You successfully deleted this event\",\n            \"success\"\n          );\n\n          this.$router.push(\"dashboard\");\n\n          var deleteEvent = new FormData();\n          deleteEvent.append(\"eventCode\", sessionStorage.getItem(\"eventCode\"));\n          var resp = fetch(\n            \"https://gettogetherbcit.herokuapp.com/mysql/deleteEvents.php\",\n            {\n              method: \"POST\",\n              body: deleteEvent\n            }\n          );\n        } else {\n          this.$swal(\"Cancelled\", \"Your event still exists\", \"info\");\n        }\n      });\n    }\n  },\n  beforeCreate: async function() {\n    var eventForm = new FormData();\n    eventForm.append(\"eventCode\", sessionStorage.getItem(\"eventCode\"));\n\n    var resp = await fetch(\n      \"https://gettogetherbcit.herokuapp.com/mysql/selectEvent.php\",\n      {\n        method: \"POST\",\n        body: eventForm\n      }\n    );\n\n    var json = await resp.json();\n    this.event = json;\n\n    if (json) {\n      this.store.eventID = json[0].id;\n      this.store.eventname = json[0].eventname;\n      this.store.eventlocation = json[0].eventlocation;\n      this.store.eventdate = json[0].eventdate;\n      this.store.eventenddate = json[0].eventenddate;\n      this.store.eventtime = json[0].eventtime;\n      this.store.eventend = json[0].eventend;\n      this.store.eventnote = json[0].eventnote;\n\n      var temp = sessionStorage.getItem(\"userID\");\n      var temp2 = json[0].admin;\n\n      if (sessionStorage.getItem(\"userID\") === json[0].admin) {\n        this.isAdmin = true;\n      } else {\n        this.isAdmin = false;\n        this.isUser = true;\n      }\n    }\n\n    var displayTasks = new FormData();\n    displayTasks.append(\"eventCode\", sessionStorage.getItem(\"eventCode\"));\n    displayTasks.append(\"tasks\", this.tasks);\n\n    var resp = await fetch(\n      \"https://gettogetherbcit.herokuapp.com/mysql/getJoinedTasks.php\",\n      {\n        method: \"POST\",\n        body: displayTasks\n      }\n    );\n\n    var json = await resp.json();\n    this.newTasks = json;\n\n    this.myRoom = sessionStorage.getItem(\"eventCode\");\n\n    var obj = {\n      roomName: this.myRoom\n    };\n\n    this.socket.emit(\"join_room\", obj);\n  },\n  mounted() {\n    this.socket.on(\"receive_msg\", data => {\n      this.allMsgs.push(data);\n    });\n  }\n};\n</script>\n"]}]}